openapi: "3.0.0"
info:
  title: Agile Board
  version: 0.0.1
security:
  - bearerAuth: []
paths:
  $ref: ./paths/index.yaml

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    # Auth definitions
    Credentials:
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
    AuthToken:
      properties:
        token:
          type: string
        expiresAt:
          type: string
          format: date-time
    
    # Admin definitions
    UsersList:
      properties:
        total:
          type: number
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
    
    User:
      properties:
        id:
          type: number
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        status:
          type: string
          enum: [ active, inactive, deleted ]
        lastLogin:
          type: string
          format: date-time
          
    # User Profile definitions
    UserProfile:
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        photo:
          type: string
        bio:
          type: string


    # General definitions
    Message:
      properties:
        message:
          type: string
    Error:
      properties:
        message:
          type: string

  parameters:
    # General Parameters
    offsetParam:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 0
      description: The number of items to skip before starting to collect the result set.
    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 50
        default: 20
      description: The numbers of items to return.


    userIdParam:
      in: path
      name: userId
      required: true
      schema:
        type: string
    projectCodeParam:
      in: path
      name: projectCode
      required: true
      schema:
        type: string
    sprintCodeParam:
      in: path
      name: sprintCode
      required: true
      schema:
        type: string
    cardIdParam:
      in: path
      name: cardId
      required: true
      schema:
        type: string
  responses:
    # Auth Responses
    UnauthorizedError:
      description: Access token is missing or invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    GeneralError:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
